{"version":3,"sources":["api/service.js","history/index.js","store/actions/index.js","store/reducers/articlesReducer.js","store/reducers/pageSettingsReducer.js","store/reducers/userReducer.js","store/reducers/errorsReducer.js","store/reducers/index.js","store/index.js","components/Navigation.jsx","components/Like.jsx","components/ArticlePreview.jsx","components/ArticlesLists.jsx","components/UserProfile.jsx","routes/Home.jsx","components/Login.jsx","routes/Login.jsx","components/SignUp.jsx","routes/SignUp.jsx","components/ArticleActions.jsx","routes/Article.jsx","components/AddNewArticle.jsx","routes/ArticleEdit.jsx","routes/AddArticle.jsx","routes/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","token","JSON","parse","localStorage","getItem","headers","Authorization","err","Promise","reject","login","user","a","post","response","setItem","stringify","data","registration","getArticles","params","get","editArticle","slug","body","put","article","addArticle","deleteArticle","delete","setFavorite","unsetFavorite","createBrowserHistory","basename","loginRequest","createAction","loginSuccess","loginFailure","logout","registrRequest","registrSuccess","registrFailure","articlesRequest","articlesSuccess","articlesFailure","editArticleRequest","editArticleSuccess","editArticleFailure","deleteArticleRequest","deleteArticleSuccess","deleteArticleFailure","addArticleRequest","addArticleSuccess","addArticleFailure","setFavoriteRequest","setFavoriteSuccess","setFavoriteFailure","unsetFavoriteRequest","unsetFavoriteSuccess","unsetFavoriteFailure","changePage","setArticlesParams","loginAction","dispatch","API","userData","history","push","registrAction","email","password","articlesAction","articles","articlesCount","articlesReducer","handleActions","actions","state","payload","newArticle","map","isLoading","filter","limit","pageSettingsReducer","pageNumber","currentPage","pageSize","initialState","loggedIn","userReducer","removeItem","errorsReducer","errors","combineReducers","pageSettings","createStore","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Navigation","props","useSelector","useDispatch","theme","mode","style","lineHeight","display","Item","key","to","marginLeft","onClick","Like","favorited","favoritesCount","HeartTwoTone","twoToneColor","fontSize","Meta","Card","ArticlePreview","title","author","description","createdAt","tagList","formattedDate","formatDistance","Date","hoverable","extra","username","length","tag","_","ArticlesList","useEffect","list","tip","width","size","gridTemplateColumns","gridGap","backgroundColor","UserProfile","marginRight","icon","UserOutlined","marginTop","type","Home","padding","flexGrow","current","total","onChange","page","offset","Login","errorsApi","serverErrors","Object","keys","reduce","acc","cur","join","defaultField","name","placeholder","Type","Prefix","field","meta","prefix","marginBottom","touched","error","className","color","validationSchema","Yup","shape","required","initialValues","loged","onSubmit","values","action","setSubmitting","isSubmitting","handleSubmit","margin","Input","MailOutlined","Password","LockOutlined","disabled","htmlType","isEmpty","message","justifyContent","alignItems","height","SignUp","validSchema","max","matches","min","ArticleActions","EditOutlined","CloseCircleOutlined","defaultProps","Article","match","find","item","tags","minHeight","FormItem","Form","MyFormikForm","withFormik","mapPropsToValues","of","actionToDispatch","colors","inputTagRef","React","createRef","validateStatus","help","form","FileTextFilled","FormOutlined","TextArea","autoSize","minRows","maxRows","render","remove","index","Math","floor","random","float","closable","onClose","ref","value","ArticleEdit","storageArticle","flexDirection","AddArticle","Header","Layout","Content","Routes","maxWidth","exact","path","component","App","store","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch","console"],"mappings":"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","file":"static/js/main.43dcacfb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://conduit.productionready.io/api/',\r\n});\r\n\r\n// Перехватываем запрос и перед отправкой добавляем заголовок авторизации, если такой имеется\r\napi.interceptors.request.use(\r\n  request => {\r\n    const { token } = JSON.parse(localStorage.getItem('user')) || {};\r\n    if (token) {\r\n      request.headers.Authorization = `Token ${token}`;\r\n    }\r\n    return request;\r\n  },\r\n  err => Promise.reject(err)\r\n);\r\n\r\nexport const login = async user => {\r\n  const response = await api.post('/users/login', { user });\r\n  localStorage.setItem('user', JSON.stringify(response.data.user));\r\n  return response.data.user;\r\n};\r\n\r\nexport const registration = async user => {\r\n  const response = await api.post('/users', { user });\r\n  return response.data.user;\r\n};\r\n// Query Parameters: tag, author, favorited, limit, offcet/skip\r\nexport const getArticles = async params => {\r\n  const response = await api.get('/articles', { params });\r\n  return response.data;\r\n};\r\n// id of particular page\r\nexport const getOneArticle = async slug => {\r\n  const response = await api.get(`/articles/${slug}`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n// we know the specific url, so use put (update article)\r\nexport const editArticle = async (slug, body) => {\r\n  const response = await api.put(`/articles/${slug}`, { article: body });\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const addArticle = async body => {\r\n  const response = await api.post('/articles', { article: body });\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const deleteArticle = async slug => {\r\n  const response = await api.delete(`/articles/${slug}`);\r\n  return response;\r\n};\r\n\r\nexport const setFavorite = async slug => {\r\n  const response = await api.post(`/articles/${slug}/favorite`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport const unsetFavorite = async slug => {\r\n  const response = await api.delete(`/articles/${slug}/favorite`);\r\n  const {\r\n    data: { article },\r\n  } = response;\r\n  return article;\r\n};\r\n\r\nexport default api;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory({ basename: '/BLOG' });","import { createAction } from 'redux-actions';\r\nimport * as API from '../../api/service';\r\nimport history from '../../history';\r\n\r\nexport const loginRequest = createAction('USER_LOGIN_REQUEST');\r\nexport const loginSuccess = createAction('USER_LOGIN_SUCCESS');\r\nexport const loginFailure = createAction('USER_LOGIN_FAILURE');\r\n\r\nexport const logout = createAction('USER_LOGOUT');\r\n\r\nexport const registrRequest = createAction('USER_REGISTR_REQUEST');\r\nexport const registrSuccess = createAction('USER_REGISTR_SUCCESS');\r\nexport const registrFailure = createAction('USER_REGISTR_FAILURE');\r\n\r\nexport const articlesRequest = createAction('ARTICLES_REQUEST');\r\nexport const articlesSuccess = createAction('ARTICLES_SUCCESS');\r\nexport const articlesFailure = createAction('ARTICLES_FAILURE');\r\n\r\nexport const editArticleRequest = createAction('EDIT_ARTICLE_REQUEST');\r\nexport const editArticleSuccess = createAction('EDIT_ARTICLE_SUCCESS');\r\nexport const editArticleFailure = createAction('EDIT_ARTICLE_FAILURE');\r\n\r\nexport const deleteArticleRequest = createAction('DELETE_ARTICLE_REQUEST');\r\nexport const deleteArticleSuccess = createAction('DELETE_ARTICLE_SUCCESS');\r\nexport const deleteArticleFailure = createAction('DELETE_ARTICLE_FAILURE');\r\n\r\nexport const addArticleRequest = createAction('ADD_ARTICLE_REQUEST');\r\nexport const addArticleSuccess = createAction('ADD_ARTICLE_SUCCESS');\r\nexport const addArticleFailure = createAction('ADD_ARTICLE_FAILURE');\r\n\r\nexport const setFavoriteRequest = createAction('SET_FAVORITE_REQUEST');\r\nexport const setFavoriteSuccess = createAction('SET_FAVORITE_SUCCESS');\r\nexport const setFavoriteFailure = createAction('SET_FAVORITE_FAILURE');\r\n\r\nexport const unsetFavoriteRequest = createAction('UNSET_FAVORITE_REQUEST');\r\nexport const unsetFavoriteSuccess = createAction('UNSET_FAVORITE_SUCCESS');\r\nexport const unsetFavoriteFailure = createAction('UNSET_FAVORITE_FAILURE');\r\n\r\nexport const changePage = createAction('CHANGE_CURRENT_PAGE');\r\nexport const setArticlesParams = createAction('SET_ARTICLES_PARAMS');\r\n\r\nexport const setFavoriteAction = slug => async dispatch => {\r\n  dispatch(setFavoriteRequest());\r\n  try {\r\n    const article = await API.setFavorite(slug);\r\n    dispatch(setFavoriteSuccess({ article }));\r\n  } catch (err) {\r\n    dispatch(setFavoriteFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const unsetFavoriteAction = slug => async dispatch => {\r\n  dispatch(unsetFavoriteRequest());\r\n  try {\r\n    const article = await API.unsetFavorite(slug);\r\n    dispatch(unsetFavoriteSuccess({ article }));\r\n  } catch (err) {\r\n    dispatch(unsetFavoriteFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const changePageAction = pageNumber => async dispatch => {\r\n  dispatch(changePage({ pageNumber }));\r\n};\r\n\r\nexport const setArticlesParamsAction = params => async dispatch => {\r\n  dispatch(setArticlesParams({ params }));\r\n};\r\n\r\nexport const addArticleAction = body => async dispatch => {\r\n  dispatch(addArticleRequest());\r\n  try {\r\n    const article = await API.addArticle(body);\r\n    dispatch(addArticleSuccess({ article }));\r\n    history.push(`/articles/${article.slug}`);\r\n  } catch (err) {\r\n    dispatch(addArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const deleteArticleAction = slug => async dispatch => {\r\n  dispatch(deleteArticleRequest());\r\n  try {\r\n    await API.deleteArticle(slug);\r\n    dispatch(deleteArticleSuccess({ slug }));\r\n  } catch (err) {\r\n    dispatch(deleteArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const editArticleAction = (slug, body) => async dispatch => {\r\n  dispatch(editArticleRequest());\r\n  try {\r\n    const article = await API.editArticle(slug, body);\r\n    dispatch(editArticleSuccess({ article }));\r\n    history.push(`/articles/${slug}`);\r\n  } catch (err) {\r\n    dispatch(editArticleFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const loginAction = user => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await API.login(user);\r\n    dispatch(loginSuccess({ userData: response }));\r\n    history.push('/home');\r\n  } catch (err) {\r\n    dispatch(loginFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const registrAction = user => async dispatch => {\r\n  dispatch(registrRequest());\r\n  try {\r\n    await API.registration(user);\r\n    const { email, password } = user;\r\n    dispatch(loginAction({ email, password }));\r\n  } catch (err) {\r\n    dispatch(registrFailure(err.response.data));\r\n  }\r\n};\r\n\r\nexport const articlesAction = params => async dispatch => {\r\n  dispatch(articlesRequest());\r\n  try {\r\n    dispatch(setArticlesParams({ params }));\r\n    const { articles, articlesCount } = await API.getArticles(params);\r\n    dispatch(articlesSuccess({ articles, articlesCount }));\r\n  } catch (err) {\r\n    dispatch(articlesFailure(err.response.data));\r\n  }\r\n};\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst initialState = { articles: [], articlesCount: 0, isLoading: false, params: { limit: 10 } };\r\n\r\nconst articlesReducer = handleActions(\r\n  {\r\n    [actions.setArticlesParams](state, { payload: { params } }) {\r\n      return { ...state, params };\r\n    },\r\n    [actions.setFavoriteSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles };\r\n    },\r\n    [actions.unsetFavoriteSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles };\r\n    },\r\n    [actions.editArticleRequest](state) {\r\n      return { ...state, isLoading: true };\r\n    },\r\n    [actions.editArticleSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = state.articles.map(article =>\r\n        article.slug === newArticle.slug ? newArticle : article\r\n      );\r\n      return { ...state, articles, isLoading: false };\r\n    },\r\n    [actions.addArticleRequest](state) {\r\n      return { ...state, isLoading: true };\r\n    },\r\n    [actions.addArticleSuccess](state, { payload: { article: newArticle } }) {\r\n      const articles = [...state.articles, newArticle];\r\n      return { ...state, articles, isLoading: false };\r\n    },\r\n    [actions.deleteArticleSuccess](state, { payload: { slug } }) {\r\n      const articles = state.articles.filter(article => article.slug !== slug);\r\n      return { ...state, articles };\r\n    },\r\n    [actions.articlesRequest](state) {\r\n      return { ...state, isLoading: true };\r\n    },\r\n    [actions.articlesSuccess](state, { payload: { articles, articlesCount } }) {\r\n      return { ...state, articles, articlesCount, isLoading: false };\r\n    },\r\n    [actions.articlesFailure](state) {\r\n      return { ...state, articles: [] };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default articlesReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst initialState = { currentPage: 1, pageSize: 10 };\r\n\r\nconst pageSettingsReducer = handleActions(\r\n  {\r\n    [actions.changePage](state, { payload: { pageNumber } }) {\r\n      return { ...state, currentPage: pageNumber };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default pageSettingsReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user\r\n  ? { loggedIn: true, isLoading: false, user }\r\n  : { loggedIn: false, isLoading: false };\r\n\r\nconst userReducer = handleActions(\r\n  {\r\n    [actions.loginRequest](state) {\r\n      return { ...state, isLoading: true };\r\n    },\r\n    [actions.loginSuccess](state, { payload: { userData } }) {\r\n      return { isLoading: false, loggedIn: true, user: userData };\r\n    },\r\n    [actions.loginFailure]() {\r\n      return { loggedIn: false };\r\n    },\r\n    [actions.logout]() {\r\n      localStorage.removeItem('user');\r\n      return { loggedIn: false };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default userReducer;\r\n","import { handleActions } from 'redux-actions';\r\nimport * as actions from '../actions';\r\n\r\nconst errorsReducer = handleActions(\r\n  {\r\n    [actions.loginSuccess]() {\r\n      return '';\r\n    },\r\n    [actions.registrSuccess]() {\r\n      return '';\r\n    },\r\n    [actions.loginFailure](state, { payload: { errors } }) {\r\n      return errors;\r\n    },\r\n    [actions.registrFailure](state, { payload: { errors } }) {\r\n      return errors;\r\n    },\r\n    [actions.editArticleFailure](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n    [actions.addArticleFailure](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n    [actions.deleteArticleFailure](state, { payload, payload: { errors } }) {\r\n      return errors || payload;\r\n    },\r\n  },\r\n  {}\r\n);\r\n\r\nexport default errorsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport articlesReducer from './articlesReducer';\r\nimport pageSettingsReducer from './pageSettingsReducer';\r\nimport userReducer from './userReducer';\r\nimport errorsReducer from './errorsReducer';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  errors: errorsReducer,\r\n  articles: articlesReducer,\r\n  pageSettings: pageSettingsReducer,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\n// eslint-disable-next-line no-underscore-dangle\r\nconst devtools = () => window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nexport default createStore(reducers, compose(applyMiddleware(thunk), devtools()));\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst Navigation = props => {\r\n  const { loggedIn } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogoutClick = () => {\r\n    dispatch(actions.logout());\r\n    dispatch(actions.articlesAction({ limit: 10 }));\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      theme=\"dark\"\r\n      mode=\"horizontal\"\r\n      style={{ lineHeight: '64px', display: 'flex' }}\r\n    >\r\n      <Menu.Item key=\"/home\">\r\n        <Link to=\"/home\">Home</Link>\r\n      </Menu.Item>\r\n      {!loggedIn && (\r\n        <Menu.Item key=\"/login\" style={{ marginLeft: 'auto' }}>\r\n          <Link to=\"/login\">Login</Link>\r\n        </Menu.Item>\r\n      )}\r\n      {loggedIn && (\r\n        <Menu.Item style={{ marginLeft: 'auto' }} onClick={handleLogoutClick}>\r\n          Log out\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { HeartTwoTone } from '@ant-design/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\nconst Like = ({ article }) => {\r\n    const dispatch = useDispatch();\r\n    const { favorited, favoritesCount, slug } = article;\r\n    \r\n    const Like = () => dispatch(actions.setFavoriteAction(slug));\r\n    const doesntLike = () => dispatch(actions.unsetFavoriteAction(slug));\r\n    return (\r\n      <div>\r\n        <HeartTwoTone\r\n          twoToneColor={favorited ? \"#eb2f96\" : '#52c41a'} \r\n          style={{ fontSize: '20px' }}\r\n          onClick={favorited ? doesntLike : Like}\r\n        />\r\n        <span style={{ fontSize: '22px' }}>{favoritesCount}</span>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  Like.propTypes = {\r\n    article: PropTypes.instanceOf(Object).isRequired,\r\n  };\r\n  \r\n  export default Like;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistance } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Tag } from 'antd';\r\nimport Like from './Like';\r\n\r\nimport * as _ from 'lodash';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ArticlePreview = ({ article }) => {\r\n  const { title, author, description, createdAt, slug, tagList } = article;\r\n  const formattedDate = formatDistance(new Date(createdAt), new Date());\r\n\r\n  const readMore = () => {\r\n    localStorage.setItem('openedArticle', JSON.stringify(article));\r\n  };\r\n  return (\r\n    <Card hoverable title={title} extra={<Like article={article} />}>\r\n      <p>{description}</p>\r\n      <Link to={`/articles/${slug}`} onClick={readMore}>\r\n        Read more...\r\n      </Link>\r\n      <Meta description={`Created ${formattedDate} ago`} />\r\n      <Meta description={`Author ${author.username}`} />\r\n      {tagList.length > 0 && (\r\n        <p>\r\n          Tags:\r\n          {tagList.map(tag => (\r\n            <Tag key={_.uniqueId()}>{tag}</Tag>\r\n          ))}\r\n        </p>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nArticlePreview.propTypes = {\r\n  article: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default ArticlePreview;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin } from 'antd';\r\nimport ArticlePreview from './ArticlePreview';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticlesList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    actions.articlesAction({ limit: 10 })(dispatch);\r\n  }, []);\r\n\r\n  const { articles, isLoading } = useSelector(state => ({\r\n    articles: state.articles.articles,\r\n    isLoading: state.articles.isLoading,\r\n  }));\r\n\r\n  const list = articles.map(article => <ArticlePreview key={article.slug} article={article} />);\r\n  const styles = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(350px, 1fr))',\r\n    gridGap: '10px',\r\n    backgroundColor: 'white', \r\n  };\r\n\r\n  return isLoading ? (\r\n    <Spin tip=\"Loading...\" style={{ width: '100%' }} size=\"large\" />\r\n  ) : (\r\n    <div style={styles}>{list}</div>\r\n  );\r\n};\r\n\r\nexport default ArticlesList;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, Avatar, Button } from 'antd';\r\nimport * as actions from '../store/actions';\r\nimport history from '../history';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst UserProfile = () => {\r\n  const { pageSize, user } = useSelector(state => ({\r\n    pageSize: state.pageSettings.pageSize,\r\n    params: state.articles.params,\r\n    user: state.user.user,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card\r\n      hoverable\r\n      style={{ width: 240, marginRight: '10px' }}\r\n      title={<Avatar size={64} icon={<UserOutlined />} />}\r\n    >\r\n      <Meta title={user.username} description={user.email} />\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          dispatch(actions.articlesAction({ author: user.username }));\r\n        }}\r\n      >\r\n        Show my articles\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => dispatch(actions.articlesAction({ limit: pageSize }))}\r\n      >\r\n        Show all articles\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() =>\r\n          dispatch(actions.articlesAction({ limit: pageSize, favorited: user.username }))\r\n        }\r\n      >\r\n        Show liked\r\n      </Button>\r\n      <Button\r\n        style={{ marginTop: '20px', width: '100%' }}\r\n        type=\"primary\"\r\n        onClick={() => history.push('/add')}\r\n      >\r\n        Add new article\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useEffect } from 'react';\r\nimport { Pagination } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ArticlesList from '../components/ArticlesLists';\r\nimport * as actions from '../store/actions';\r\nimport UserProfile from '../components/UserProfile';\r\n\r\nconst Home = () => {\r\n  const { loggedIn } = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n  const { currentPage, pageSize, articlesCount, params } = useSelector(state => ({\r\n    articles: state.articles.articles,\r\n    articlesCount: state.articles.articlesCount,\r\n    currentPage: state.pageSettings.currentPage,\r\n    pageSize: state.pageSettings.pageSize,\r\n    params: state.articles.params,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.articlesAction({ limit: 10 }));\r\n  }, []);\r\n\r\n  const handlePageChange = page => {\r\n    dispatch(actions.changePageAction(page));\r\n    dispatch(actions.articlesAction({ ...params, offset: (page - 1) * pageSize }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '40px', display: 'flex' }}>\r\n      {loggedIn && <UserProfile />}\r\n      <div style={{ flexGrow: '1' }}>\r\n        <ArticlesList />\r\n        {articlesCount > pageSize && (\r\n          <Pagination\r\n            style={{ marginTop: '30px' }}\r\n            current={currentPage}\r\n            total={articlesCount}\r\n            pageSize={pageSize}\r\n            onChange={handlePageChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash';\r\nimport { Input, Button, Alert } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport * as Yup from 'yup';\r\nimport * as action from '../store/actions';\r\n\r\nconst Login = () => {\r\n  const { errors: errorsApi } = useSelector(state => state);\r\n  const serverErrors = Object.keys(errorsApi).reduce((acc, cur) => {\r\n    return `${acc}\\n${cur}: ${errorsApi[cur].join(',')}`;\r\n  }, '');\r\n  const dispatch = useDispatch();\r\n  const defaultField = (name, type, placeholder, Type, Prefix) => (\r\n    <Field name={name}>\r\n      {({\r\n        field, // { name, value, onChange, onBlur }\r\n        meta,\r\n      }) => (\r\n        <div>\r\n          <Type\r\n            prefix={Prefix}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            {...field}\r\n            style={{ marginBottom: '10px' }}\r\n          />\r\n          {meta.touched && meta.error && (\r\n            <div className=\"error\" style={{ color: 'red', marginTop: '-10px' }}>{meta.error}</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Field>\r\n  );\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email('Must be a valid email address')\r\n      .required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        password: '',\r\n        email: '',\r\n        loged: false,\r\n      }}\r\n      onSubmit={(values, actions) => {\r\n        dispatch(action.loginAction(values));\r\n        actions.setSubmitting(false);\r\n      }}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {(props) => {\r\n        const { isSubmitting } = props;\r\n        return (\r\n          <Form onSubmit={props.handleSubmit} style={{ margin: '0 auto', width: '300px', marginTop: '200px' }}>\r\n            {defaultField('email', 'email', 'input email', Input, <MailOutlined />)}\r\n            {defaultField('password', 'password', 'input password', Input.Password, <LockOutlined />)}\r\n            <div />\r\n            <Button\r\n              disabled={isSubmitting}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ width: '100%', marginBottom: '10px' }}\r\n            >\r\n              Log in\r\n            </Button>\r\n            <Link to=\"/SignUp\">\r\n              SignUp\r\n            </Link>\r\n            {!isEmpty(errorsApi) && <Alert type=\"error\" message={serverErrors} />}\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport LoginForm from '../components/Login';\r\n\r\nconst Login = () => {\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    backgroundColor: 'white',\r\n  };\r\n  return (\r\n    <div style={styles}>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash';\r\nimport { Input, Button, Alert } from 'antd';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { LockOutlined, MailOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nimport * as action from '../store/actions';\r\nimport 'antd/dist/antd.css';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n  const { errors: errorsApi } = useSelector(state => state);\r\n  const serverErrors = Object.keys(errorsApi).reduce((acc, cur) => {\r\n    return `${acc}\\n${cur}: ${errorsApi[cur].join(',')}`;\r\n  }, '');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const defaultField = (name, type, placeholder, Type, Prefix) => (\r\n    <Field name={name}>\r\n      {({\r\n        field, // { name, value, onChange, onBlur }\r\n        meta,\r\n      }) => (\r\n        <div>\r\n          <Type\r\n            prefix={Prefix}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            {...field}\r\n            style={{ marginBottom: '10px' }}\r\n          />\r\n          {meta.touched && meta.error && (\r\n            <div className=\"error\" style={{ color: 'red', marginTop: '-10px'}}>{meta.error}</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Field>\r\n  );\r\n\r\n  const validSchema = Yup.object({\r\n    username: Yup.string()\r\n      .max(50, 'Must 50 characters or less')\r\n      .required('You must enter Name'),\r\n    password: Yup.string()\r\n      .matches(/^[a-zA-Z0-9]{0,}$/, 'Password have only latin letters and digits')\r\n      .min(8, 'Password is too short - should be 8 chars minimum.')\r\n      .max(40, 'Must be 40 characters or less')\r\n      .matches(/[0-9]+/, 'Password must contain at least one digit')\r\n      .matches(/[A-Z]+/, 'Password must contain an one uppercase character')\r\n      .required('You must enter password'),\r\n    email: Yup.string()\r\n      .email('Invalid email address')\r\n      .required('You must enter email'),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n      }}\r\n      onSubmit={async (values, actions) => {\r\n        dispatch(action.registrAction(values));\r\n        actions.setSubmitting(false);\r\n      }}\r\n      validationSchema={validSchema}\r\n    >\r\n      {(props) => {\r\n        const { isSubmitting } = props;\r\n        return (\r\n          <Form\r\n            onSubmit={props.handleSubmit}\r\n            style={{ margin: '0 auto', width: '300px', marginTop: '200px' }}\r\n          >\r\n            {defaultField('username', 'input', 'input Name', Input, <UserOutlined />)}\r\n            {defaultField('email', 'email', 'input email', Input, <MailOutlined />)}\r\n            {defaultField('password', 'password', 'input password', Input.Password, <LockOutlined />)}\r\n            <div />\r\n            <Button\r\n              disabled={isSubmitting}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ width: '100%', marginBottom: '10px' }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Link to=\"/Login\"> Login </Link>\r\n            {!isEmpty(errorsApi) && <Alert type=\"error\" message={serverErrors} />}\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport SignUpForm from '../components/SignUp';\r\n\r\nconst SignUp = () => {\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  };\r\n  return (\r\n    <div style={styles}>\r\n      <SignUpForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport Like from './Like';\r\nimport history from '../history';\r\nimport { EditOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticleActions = ({ article, user }) => {\r\n  const { author = {}, slug } = article;\r\n  const dispatch = useDispatch();\r\n  const handleDeleteClick = () => {\r\n    dispatch(actions.deleteArticleAction(slug));\r\n    history.push(`/`);\r\n  };\r\n  return (\r\n    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n      <span style={{ marginRight: '20px' }}>\r\n        <Like article={article} />\r\n      </span>\r\n      {user.username === author.username && (\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            shape=\"circle\"\r\n            icon={<EditOutlined />}\r\n            onClick={() => {\r\n              history.push(`/articles/${slug}/edit`);\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"danger\"\r\n            size=\"large\"\r\n            shape=\"circle\"\r\n            icon={<CloseCircleOutlined />}\r\n            onClick={handleDeleteClick}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nArticleActions.propTypes = {\r\n  article: PropTypes.instanceOf(Object),\r\n  user: PropTypes.instanceOf(Object),\r\n};\r\n\r\nArticleActions.defaultProps = {\r\n  article: {},\r\n  user: {},\r\n};\r\n\r\nexport default ArticleActions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistance } from 'date-fns';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card, Tag } from 'antd';\r\nimport ArticleActions from '../components/ArticleActions';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst Article = ({ match }) => {\r\n  const { slug } = match.params;\r\n  const { user, article = {} } = useSelector(state => ({\r\n    article: state.articles.articles.find(item => item.slug === slug) || {},\r\n    user: state.user.user,\r\n  }));\r\n  const { author = {} } = article;\r\n  const formattedDate = formatDistance(new Date(article.createdAt || 0), new Date());\r\n\r\n  const tags = article.tagList && article.tagList.map(tag => <Tag key={tag}>{tag}</Tag>);\r\n\r\n  return (\r\n    <div style={{ padding: '30px' }}>\r\n      <Card\r\n        hoverable\r\n        title={article.title}\r\n        extra={<ArticleActions article={article} user={user} />}\r\n      >\r\n        <p style={{ minHeight: '200px' }}>{article.body}</p>\r\n        <Meta description={`Created ${formattedDate} ago. Author - ${author.username}`} />\r\n        {tags && tags.length > 0 && <p>Tags: {tags}</p>}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n  match: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport { Button, Input, Form, Tag } from \"antd\";\r\nimport { withFormik, Form as FormikForm, Field as FormikField, FieldArray } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport { FileTextFilled, FormOutlined } from '@ant-design/icons';\r\n\r\nimport * as _ from 'lodash';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst InnerForm = ({\r\n  props,\r\n  values,\r\n  errors,\r\n  touched,\r\n  isSubmitting,\r\n  handleSubmit,\r\n}) => {\r\n  const randomNumber = (min, max) => {\r\n      return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n  const colors = [\r\n    'magenta', 'red', 'volcano', 'orange', 'gold',\r\n    'lime', 'green', 'cyan', 'blue', 'geekblue', 'purple',\r\n  ];\r\n  const inputTagRef = React.createRef();\r\n  return (\r\n    <FormikForm onSubmit={handleSubmit} style={{ margin: '0 auto', width: '500px' }}>\r\n      <FormItem \r\n        validateStatus={touched.title && errors.title ? 'error' : null}\r\n        help={touched.title && errors.title ? errors.title : null}\r\n      >\r\n        <FormikField name=\"title\">\r\n            {({\r\n              field, // { name, value, onChange, onBlur }\r\n              form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n              meta,\r\n            }) => (\r\n              <div>\r\n                  <Input prefix={<FileTextFilled />} type=\"text\" placeholder=\"Input title\" {...field} />\r\n              </div>\r\n            )}\r\n        </FormikField>\r\n      </FormItem>\r\n      <FormItem\r\n        validateStatus={touched.description && errors.description ? 'error' : null}\r\n        help={touched.description && errors.description ? errors.description : null}\r\n      >\r\n        <FormikField name=\"description\">\r\n            {({\r\n              field, // { name, value, onChange, onBlur }\r\n              form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n              meta,\r\n            }) => (\r\n              <div>\r\n                  <Input prefix={<FormOutlined />} type=\"text\" placeholder=\"Input description\" {...field} />\r\n              </div>\r\n            )}\r\n        </FormikField>\r\n      </FormItem>\r\n      <FormItem\r\n        validateStatus={touched.body && errors.body ? 'error' : null}\r\n        help={touched.body && errors.body ? errors.body : null}\r\n      >\r\n        <FormikField name=\"body\">\r\n            {({\r\n              field, // { name, value, onChange, onBlur }\r\n              form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n              meta,\r\n            }) => (\r\n              <div>\r\n                  <Input.TextArea autoSize={{ minRows: 8, maxRows: 8 }} type=\"text\" placeholder=\"Input body\" {...field} />\r\n              </div>\r\n            )}\r\n        </FormikField>\r\n      </FormItem>\r\n      <Form.Item\r\n            validateStatus={touched.tagList && errors.tagList ? 'error' : null}\r\n            help={touched.tagList && errors.tagList ? errors.tagList : null}\r\n          >\r\n        <FieldArray\r\n            name=\"tagList\"\r\n            render={({ remove, push }) => {\r\n            const tags =\r\n              values.tagList &&\r\n              values.tagList.map((tag, index) => (\r\n              <Tag\r\n                color={colors[randomNumber(1, 11)]}\r\n                style={{marginBottom: '10px', float: 'left'}}\r\n                key={_.uniqueId()}\r\n                closable\r\n                name={`tagList[${index}]`}\r\n                onClose={() => remove(index)}\r\n              >\r\n                {tag}\r\n              </Tag>\r\n            ));\r\n            return (\r\n                <div>\r\n                {tags}\r\n                <Input ref={inputTagRef} />\r\n                <Button\r\n                    type=\"primary\"\r\n                    style={{marginTop: '20px', float: 'left'}}\r\n                    onClick={() => {\r\n                    push(inputTagRef.current.state.value);\r\n                    inputTagRef.current.state.value = '';\r\n                    }}\r\n                >\r\n                    Добавить тег\r\n                </Button>\r\n                </div>\r\n            );\r\n            }}\r\n        />\r\n        </Form.Item>\r\n      <FormItem>\r\n        <Button\r\n          htmlType=\"submit\"\r\n          type=\"primary\"\r\n          disabled={isSubmitting}\r\n          style={{ width: '100%', marginBottom: '10px', marginTop: '10px' }}\r\n        >\r\n          Save changes\r\n        </Button>\r\n      </FormItem>\r\n    </FormikForm>\r\n  );\r\n};\r\n\r\nconst MyFormikForm = withFormik({\r\n  mapPropsToValues({ initialValues = {}, title, description, body, tagList }) {\r\n    return {\r\n      title: initialValues.title || title || '',\r\n      description: initialValues.description || description || '',\r\n      body: initialValues.body || body || '',\r\n      tagList: initialValues.tagList || tagList || [],\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    title: Yup.string().required('Title is required'),\r\n    description: Yup.string().required('Description is required'),\r\n    body: Yup.string().required('Body is required'),\r\n    tagList: Yup.array()\r\n      .of(Yup.string().required('Enter a tagname'))\r\n      .min(1, 'Must be minimum one tag'),\r\n  }),\r\n\r\n  handleSubmit( values, actions) {\r\n    const { props, setSubmitting } = actions;\r\n    props.actionToDispatch(values);\r\n    setSubmitting(false);\r\n  }\r\n})(InnerForm);\r\n\r\nexport default MyFormikForm;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\nimport { Spin } from 'antd';\r\nimport ArticleForm from '../components/AddNewArticle';\r\nimport * as actions from '../store/actions';\r\n\r\nconst ArticleEdit = ({ match }) => {\r\n  const { slug } = match.params;\r\n  const dispatch = useDispatch();\r\n  const { article, isLoading } = useSelector(state => ({\r\n    article: state.articles.articles.find(item => item.slug === slug),\r\n    isLoading: state.articles.isLoading,\r\n  }));\r\n  const actionToDispatch = values => dispatch(actions.editArticleAction(slug, values));\r\n  const storageArticle = JSON.parse(localStorage.getItem('openedArticle'));\r\n  const { title, body, description, tagList } = isEmpty(article) ? storageArticle : article;\r\n\r\n  const styles = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '70px',\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\" style={styles}>\r\n      {isLoading ? (\r\n        <Spin style={{ width: '100%' }} size=\"large\" />\r\n      ) : (\r\n        <div className=\"content\" style={{ width: '500px' }}>\r\n          <div style={{ display: 'flex', width: '100%' }}>\r\n            <h1 style={{ marginLeft: 'auto' }}> Редактирование статьи</h1>\r\n          </div>\r\n          <ArticleForm\r\n            initialValues={{ title, body, description, tagList }}\r\n            actionToDispatch={actionToDispatch}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nArticleEdit.propTypes = {\r\n  match: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default ArticleEdit;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ArticleForm from '../components/AddNewArticle';\r\nimport * as actions from '../store/actions';\r\n\r\nconst AddArticle = () => {\r\n  const dispatch = useDispatch();\r\n  const actionToDispatch = values => dispatch(actions.addArticleAction(values));\r\n\r\n  const styles = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: '100px',\r\n    backgroundColor: 'white',\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\" style={styles}>\r\n        <div className=\"content\" style={{ width: '500px' }}>\r\n          <div style={{ display: 'flex', width: '100%' }}>\r\n            <h1 style={{ marginLeft: 'auto' }}> Adding an atricle</h1>\r\n          </div>\r\n          <ArticleForm actionToDispatch={actionToDispatch} />\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddArticle;\r\n","import React from 'react';\r\nimport { Redirect, Switch, Route } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport Navbar from '../components/Navigation';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\nimport Article from './Article';\r\nimport ArticleEdit from './ArticleEdit';\r\nimport AddArticle from './AddArticle';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Layout className=\"layout\" style={{ maxWidth: '1440px', backgroundColor: 'white' }}>\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Navbar />\r\n      </Header>\r\n      <Content>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/home\" />\r\n          </Route>\r\n          <Route path=\"/add\" component={AddArticle} />\r\n          <Route path=\"/articles/:slug/edit\" component={ArticleEdit} />\r\n          <Route path=\"/home\" component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <Route exact path=\"/articles/:slug\" component={Article} />\r\n        </Switch>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Routes from './routes';\nimport history from './history';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router history={history}>\n          <Routes />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}